name: demo_pipeline_5
argo_version_lock: true
cluster_name: in-cluster
steps:
- name: deploy_to_dev
  #This is the path of the ArgoCD Application file
  application_path: testapp_dev.yml
  tests:
  - path: verifyendpoints.sh
    type: inject
    image: curlimages/curl:latest
    commands: [sh, -c, ./verifyendpoints.sh]
    before: false
    variables:
      SERVICE_INTERNAL_URL: testapp.dev.svc.cluster.local
- name: deploy_to_int
  application_path: testapp_int.yml
  tests:
  - path: verifyendpoints.sh
    type: inject
    image: curlimages/curl:latest
    commands: [sh, -c, ./verifyendpoints.sh]
    before: false
    variables:
      SERVICE_INTERNAL_URL: testapp.int.svc.cluster.local
  #The schema is DAG based, allowing both linear and complex pipelines
  dependencies:
  - deploy_to_dev
- name: deploy_to_prod
  #This is the path of the ArgoCD Application file
  application_path: testapp_dev.yml
  tests:
  - path: verifyendpoints.sh
    type: inject
    image: curlimages/curl:latest
    commands: [sh, -c, ./verifyendpoints.sh]
    before: true
    variables:
      SERVICE_INTERNAL_URL: testapp.dev.svc.cluster.local
  - path: verifyendpoints.sh
    type: inject
    image: curlimages/curl:latest
    commands: [sh, -c, ./verifyendpoints.sh]
    before: false
    variables:
      SERVICE_INTERNAL_URL: testapp.dev.svc.cluster.local
  dependencies:
  - deploy_to_dev
- name: deploy_to_stage
  #This is the path of the ArgoCD Application file
  application_path: testapp_dev.yml
  tests:
  - path: verifyendpoints.sh
    type: inject
    image: curlimages/curl:latest
    commands: [sh, -c, ./verifyendpoints.sh]
    before: true
    variables:
      SERVICE_INTERNAL_URL: testapp.dev.svc.cluster.local
  dependencies:
  - deploy_to_int
  - deploy_to_prod
