application:
  repo-server-url: ${REPO_SERVER_ENDPOINT:http://localhost:8081}
  repo-server-keystore-path: ${REPO_SERVER_KEYSTORE_PATH:}
  repo-server-cert-der-path: ${REPO_SERVER_CERT_DER_PATH:}
  repo-server-keystore-password: ${REPO_SERVER_KEYSTORE_PASSWORD:}
  jdk-ca-certs-path: ${JDK_CA_CERTS_PATH:}
  jdk-ca-certs-password: ${JDK_CA_CERTS_KEYSTORE_PASSWORD:}
  client-wrapper-url: ${CLIENT_WRAPPER_ENDPOINT:http://localhost:9091}
  redis-url: ${REDIS_ENDPOINT:localhost:6379}
  kafka:
    security:
      protocol: "SSL"
    ssl:
      truststore-location: /tls-cert/kafka.truststore.jks
      keystore-location: /tls-cert/kafka.keystore.jks
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    #      transaction-id-prefix: tx-
    listener:
      ack-mode: MANUAL_IMMEDIATE
    consumer:
      group-id: workflow_orchestrator
      auto-offset-reset: earliest
      enable-auto-commit: false
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    topic: greenops.eventing
    dlqtopic: greenops.eventing.dlq